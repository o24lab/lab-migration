// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package oldmain

import (
	"context"
	"database/sql"

	"gorm.io/gorm"

	"gorm.io/gen"

	"gorm.io/plugin/dbresolver"
)

var (
	Q                                 = new(Query)
	ActivityAlertUserConfig           *activityAlertUserConfig
	ActivityBase                      *activityBase
	ActivityBlackInfo                 *activityBlackInfo
	ActivityChristmasHelpInfo         *activityChristmasHelpInfo
	ActivityChristmasWarningThreshold *activityChristmasWarningThreshold
	ActivityCondition                 *activityCondition
	ActivityConditionChristma         *activityConditionChristma
	ActivityImage                     *activityImage
	ActivityLaunchHelp                *activityLaunchHelp
	ActivityTakeRecord                *activityTakeRecord
	AgentCommissionRate               *agentCommissionRate
	AgentDailyReport                  *agentDailyReport
	AgentRankReport                   *agentRankReport
	ChristmasNewUserSupportRule       *christmasNewUserSupportRule
	EVoucher                          *eVoucher
	GameList                          *gameList
	GamePagcor                        *gamePagcor
	GameProvider                      *gameProvider
	GameProviderSubtype               *gameProviderSubtype
	GameRankReport                    *gameRankReport
	GameType                          *gameType
	OrderSettle                       *orderSettle
	Ticket                            *ticket
	TmpUserReport                     *tmpUserReport
	UserRankReport                    *userRankReport
	WinAdmin                          *winAdmin
	WinAdminExportFileTask            *winAdminExportFileTask
	WinAdminLoginLog                  *winAdminLoginLog
	WinAdminOperateLog                *winAdminOperateLog
	WinAgentCommissionRate            *winAgentCommissionRate
	WinAgentLink                      *winAgentLink
	WinAuthAdminGroup                 *winAuthAdminGroup
	WinAuthGroup                      *winAuthGroup
	WinAuthGroupAccess                *winAuthGroupAccess
	WinAuthRule                       *winAuthRule
	WinBanner                         *winBanner
	WinBetSlipsException              *winBetSlipsException
	WinBlog                           *winBlog
	WinCheckInRecord                  *winCheckInRecord
	WinCheckInRule                    *winCheckInRule
	WinCityItem                       *winCityItem
	WinCodeAudit                      *winCodeAudit
	WinCodeRecord                     *winCodeRecord
	WinCodeRecordsRequire             *winCodeRecordsRequire
	WinCodeRecordsVip                 *winCodeRecordsVip
	WinCodeRecordsVipTmp              *winCodeRecordsVipTmp
	WinCodeRecordsVipTmp1             *winCodeRecordsVipTmp1
	WinCoinAdminTransfer              *winCoinAdminTransfer
	WinCoinCommission                 *winCoinCommission
	WinCoinDepositRecord              *winCoinDepositRecord
	WinCoinRate                       *winCoinRate
	WinCoinRebate                     *winCoinRebate
	WinCoinRebateSet                  *winCoinRebateSet
	WinCoinReward                     *winCoinReward
	WinCoinWithdrawalRecord           *winCoinWithdrawalRecord
	WinConfig                         *winConfig
	WinDict                           *winDict
	WinDictItem                       *winDictItem
	WinFbOrderLog                     *winFbOrderLog
	WinFrontGameBigCategoryBanner     *winFrontGameBigCategoryBanner
	WinFrontGameClassifyCm            *winFrontGameClassifyCm
	WinFrontGameClassifyInfoCm        *winFrontGameClassifyInfoCm
	WinGameSlotFavorite               *winGameSlotFavorite
	WinHelpInfo                       *winHelpInfo
	WinHelpType                       *winHelpType
	WinMerchant                       *winMerchant
	WinMonthlyTax                     *winMonthlyTax
	WinMqError                        *winMqError
	WinNotice                         *winNotice
	WinNoticeStatus                   *winNoticeStatus
	WinOperateLog                     *winOperateLog
	WinOperationLog                   *winOperationLog
	WinPayChannel                     *winPayChannel
	WinPayPlatConfig                  *winPayPlatConfig
	WinPromotion                      *winPromotion
	WinPromotionsInfo                 *winPromotionsInfo
	WinSendSmsReq                     *winSendSmsReq
	WinSetting                        *winSetting
	WinSmsRecord                      *winSmsRecord
	WinSpecialRecordStakeGame         *winSpecialRecordStakeGame
	WinUser                           *winUser
	WinUserBankList                   *winUserBankList
	WinUserExt                        *winUserExt
	WinUserFacebookLogin              *winUserFacebookLogin
	WinUserFbMarket                   *winUserFbMarket
	WinUserFlag                       *winUserFlag
	WinUserGoogleCode                 *winUserGoogleCode
	WinUserGoogleLogin                *winUserGoogleLogin
	WinUserJoinFlag                   *winUserJoinFlag
	WinUserKyc                        *winUserKyc
	WinUserKycBac                     *winUserKycBac
	WinUserKycHi                      *winUserKycHi
	WinUserKycHisBac                  *winUserKycHisBac
	WinUserLevel                      *winUserLevel
	WinUserLevelRebate                *winUserLevelRebate
	WinUserLevelRebateTmp             *winUserLevelRebateTmp
	WinUserLevelReward                *winUserLevelReward
	WinUserLevelTmp                   *winUserLevelTmp
	WinUserLoginLog                   *winUserLoginLog
	WinUserOnline                     *winUserOnline
	WinUserOnlineReport               *winUserOnlineReport
	WinUserPromotionRegistration      *winUserPromotionRegistration
	WinUserRebateSet                  *winUserRebateSet
	WinUserValidRebate                *winUserValidRebate
	WinUserVip                        *winUserVip
	WinUserVipConfig                  *winUserVipConfig
	XxlJobGroup                       *xxlJobGroup
	XxlJobInfo                        *xxlJobInfo
	XxlJobLock                        *xxlJobLock
	XxlJobLog                         *xxlJobLog
	XxlJobLogReport                   *xxlJobLogReport
	XxlJobLogglue                     *xxlJobLogglue
	XxlJobRegistry                    *xxlJobRegistry
	XxlJobUser                        *xxlJobUser
)

func SetDefault(db *gorm.DB, opts ...gen.DOOption) {
	*Q = *Use(db, opts...)
	ActivityAlertUserConfig = &Q.ActivityAlertUserConfig
	ActivityBase = &Q.ActivityBase
	ActivityBlackInfo = &Q.ActivityBlackInfo
	ActivityChristmasHelpInfo = &Q.ActivityChristmasHelpInfo
	ActivityChristmasWarningThreshold = &Q.ActivityChristmasWarningThreshold
	ActivityCondition = &Q.ActivityCondition
	ActivityConditionChristma = &Q.ActivityConditionChristma
	ActivityImage = &Q.ActivityImage
	ActivityLaunchHelp = &Q.ActivityLaunchHelp
	ActivityTakeRecord = &Q.ActivityTakeRecord
	AgentCommissionRate = &Q.AgentCommissionRate
	AgentDailyReport = &Q.AgentDailyReport
	AgentRankReport = &Q.AgentRankReport
	ChristmasNewUserSupportRule = &Q.ChristmasNewUserSupportRule
	EVoucher = &Q.EVoucher
	GameList = &Q.GameList
	GamePagcor = &Q.GamePagcor
	GameProvider = &Q.GameProvider
	GameProviderSubtype = &Q.GameProviderSubtype
	GameRankReport = &Q.GameRankReport
	GameType = &Q.GameType
	OrderSettle = &Q.OrderSettle
	Ticket = &Q.Ticket
	TmpUserReport = &Q.TmpUserReport
	UserRankReport = &Q.UserRankReport
	WinAdmin = &Q.WinAdmin
	WinAdminExportFileTask = &Q.WinAdminExportFileTask
	WinAdminLoginLog = &Q.WinAdminLoginLog
	WinAdminOperateLog = &Q.WinAdminOperateLog
	WinAgentCommissionRate = &Q.WinAgentCommissionRate
	WinAgentLink = &Q.WinAgentLink
	WinAuthAdminGroup = &Q.WinAuthAdminGroup
	WinAuthGroup = &Q.WinAuthGroup
	WinAuthGroupAccess = &Q.WinAuthGroupAccess
	WinAuthRule = &Q.WinAuthRule
	WinBanner = &Q.WinBanner
	WinBetSlipsException = &Q.WinBetSlipsException
	WinBlog = &Q.WinBlog
	WinCheckInRecord = &Q.WinCheckInRecord
	WinCheckInRule = &Q.WinCheckInRule
	WinCityItem = &Q.WinCityItem
	WinCodeAudit = &Q.WinCodeAudit
	WinCodeRecord = &Q.WinCodeRecord
	WinCodeRecordsRequire = &Q.WinCodeRecordsRequire
	WinCodeRecordsVip = &Q.WinCodeRecordsVip
	WinCodeRecordsVipTmp = &Q.WinCodeRecordsVipTmp
	WinCodeRecordsVipTmp1 = &Q.WinCodeRecordsVipTmp1
	WinCoinAdminTransfer = &Q.WinCoinAdminTransfer
	WinCoinCommission = &Q.WinCoinCommission
	WinCoinDepositRecord = &Q.WinCoinDepositRecord
	WinCoinRate = &Q.WinCoinRate
	WinCoinRebate = &Q.WinCoinRebate
	WinCoinRebateSet = &Q.WinCoinRebateSet
	WinCoinReward = &Q.WinCoinReward
	WinCoinWithdrawalRecord = &Q.WinCoinWithdrawalRecord
	WinConfig = &Q.WinConfig
	WinDict = &Q.WinDict
	WinDictItem = &Q.WinDictItem
	WinFbOrderLog = &Q.WinFbOrderLog
	WinFrontGameBigCategoryBanner = &Q.WinFrontGameBigCategoryBanner
	WinFrontGameClassifyCm = &Q.WinFrontGameClassifyCm
	WinFrontGameClassifyInfoCm = &Q.WinFrontGameClassifyInfoCm
	WinGameSlotFavorite = &Q.WinGameSlotFavorite
	WinHelpInfo = &Q.WinHelpInfo
	WinHelpType = &Q.WinHelpType
	WinMerchant = &Q.WinMerchant
	WinMonthlyTax = &Q.WinMonthlyTax
	WinMqError = &Q.WinMqError
	WinNotice = &Q.WinNotice
	WinNoticeStatus = &Q.WinNoticeStatus
	WinOperateLog = &Q.WinOperateLog
	WinOperationLog = &Q.WinOperationLog
	WinPayChannel = &Q.WinPayChannel
	WinPayPlatConfig = &Q.WinPayPlatConfig
	WinPromotion = &Q.WinPromotion
	WinPromotionsInfo = &Q.WinPromotionsInfo
	WinSendSmsReq = &Q.WinSendSmsReq
	WinSetting = &Q.WinSetting
	WinSmsRecord = &Q.WinSmsRecord
	WinSpecialRecordStakeGame = &Q.WinSpecialRecordStakeGame
	WinUser = &Q.WinUser
	WinUserBankList = &Q.WinUserBankList
	WinUserExt = &Q.WinUserExt
	WinUserFacebookLogin = &Q.WinUserFacebookLogin
	WinUserFbMarket = &Q.WinUserFbMarket
	WinUserFlag = &Q.WinUserFlag
	WinUserGoogleCode = &Q.WinUserGoogleCode
	WinUserGoogleLogin = &Q.WinUserGoogleLogin
	WinUserJoinFlag = &Q.WinUserJoinFlag
	WinUserKyc = &Q.WinUserKyc
	WinUserKycBac = &Q.WinUserKycBac
	WinUserKycHi = &Q.WinUserKycHi
	WinUserKycHisBac = &Q.WinUserKycHisBac
	WinUserLevel = &Q.WinUserLevel
	WinUserLevelRebate = &Q.WinUserLevelRebate
	WinUserLevelRebateTmp = &Q.WinUserLevelRebateTmp
	WinUserLevelReward = &Q.WinUserLevelReward
	WinUserLevelTmp = &Q.WinUserLevelTmp
	WinUserLoginLog = &Q.WinUserLoginLog
	WinUserOnline = &Q.WinUserOnline
	WinUserOnlineReport = &Q.WinUserOnlineReport
	WinUserPromotionRegistration = &Q.WinUserPromotionRegistration
	WinUserRebateSet = &Q.WinUserRebateSet
	WinUserValidRebate = &Q.WinUserValidRebate
	WinUserVip = &Q.WinUserVip
	WinUserVipConfig = &Q.WinUserVipConfig
	XxlJobGroup = &Q.XxlJobGroup
	XxlJobInfo = &Q.XxlJobInfo
	XxlJobLock = &Q.XxlJobLock
	XxlJobLog = &Q.XxlJobLog
	XxlJobLogReport = &Q.XxlJobLogReport
	XxlJobLogglue = &Q.XxlJobLogglue
	XxlJobRegistry = &Q.XxlJobRegistry
	XxlJobUser = &Q.XxlJobUser
}

func Use(db *gorm.DB, opts ...gen.DOOption) *Query {
	return &Query{
		db:                                db,
		ActivityAlertUserConfig:           newActivityAlertUserConfig(db, opts...),
		ActivityBase:                      newActivityBase(db, opts...),
		ActivityBlackInfo:                 newActivityBlackInfo(db, opts...),
		ActivityChristmasHelpInfo:         newActivityChristmasHelpInfo(db, opts...),
		ActivityChristmasWarningThreshold: newActivityChristmasWarningThreshold(db, opts...),
		ActivityCondition:                 newActivityCondition(db, opts...),
		ActivityConditionChristma:         newActivityConditionChristma(db, opts...),
		ActivityImage:                     newActivityImage(db, opts...),
		ActivityLaunchHelp:                newActivityLaunchHelp(db, opts...),
		ActivityTakeRecord:                newActivityTakeRecord(db, opts...),
		AgentCommissionRate:               newAgentCommissionRate(db, opts...),
		AgentDailyReport:                  newAgentDailyReport(db, opts...),
		AgentRankReport:                   newAgentRankReport(db, opts...),
		ChristmasNewUserSupportRule:       newChristmasNewUserSupportRule(db, opts...),
		EVoucher:                          newEVoucher(db, opts...),
		GameList:                          newGameList(db, opts...),
		GamePagcor:                        newGamePagcor(db, opts...),
		GameProvider:                      newGameProvider(db, opts...),
		GameProviderSubtype:               newGameProviderSubtype(db, opts...),
		GameRankReport:                    newGameRankReport(db, opts...),
		GameType:                          newGameType(db, opts...),
		OrderSettle:                       newOrderSettle(db, opts...),
		Ticket:                            newTicket(db, opts...),
		TmpUserReport:                     newTmpUserReport(db, opts...),
		UserRankReport:                    newUserRankReport(db, opts...),
		WinAdmin:                          newWinAdmin(db, opts...),
		WinAdminExportFileTask:            newWinAdminExportFileTask(db, opts...),
		WinAdminLoginLog:                  newWinAdminLoginLog(db, opts...),
		WinAdminOperateLog:                newWinAdminOperateLog(db, opts...),
		WinAgentCommissionRate:            newWinAgentCommissionRate(db, opts...),
		WinAgentLink:                      newWinAgentLink(db, opts...),
		WinAuthAdminGroup:                 newWinAuthAdminGroup(db, opts...),
		WinAuthGroup:                      newWinAuthGroup(db, opts...),
		WinAuthGroupAccess:                newWinAuthGroupAccess(db, opts...),
		WinAuthRule:                       newWinAuthRule(db, opts...),
		WinBanner:                         newWinBanner(db, opts...),
		WinBetSlipsException:              newWinBetSlipsException(db, opts...),
		WinBlog:                           newWinBlog(db, opts...),
		WinCheckInRecord:                  newWinCheckInRecord(db, opts...),
		WinCheckInRule:                    newWinCheckInRule(db, opts...),
		WinCityItem:                       newWinCityItem(db, opts...),
		WinCodeAudit:                      newWinCodeAudit(db, opts...),
		WinCodeRecord:                     newWinCodeRecord(db, opts...),
		WinCodeRecordsRequire:             newWinCodeRecordsRequire(db, opts...),
		WinCodeRecordsVip:                 newWinCodeRecordsVip(db, opts...),
		WinCodeRecordsVipTmp:              newWinCodeRecordsVipTmp(db, opts...),
		WinCodeRecordsVipTmp1:             newWinCodeRecordsVipTmp1(db, opts...),
		WinCoinAdminTransfer:              newWinCoinAdminTransfer(db, opts...),
		WinCoinCommission:                 newWinCoinCommission(db, opts...),
		WinCoinDepositRecord:              newWinCoinDepositRecord(db, opts...),
		WinCoinRate:                       newWinCoinRate(db, opts...),
		WinCoinRebate:                     newWinCoinRebate(db, opts...),
		WinCoinRebateSet:                  newWinCoinRebateSet(db, opts...),
		WinCoinReward:                     newWinCoinReward(db, opts...),
		WinCoinWithdrawalRecord:           newWinCoinWithdrawalRecord(db, opts...),
		WinConfig:                         newWinConfig(db, opts...),
		WinDict:                           newWinDict(db, opts...),
		WinDictItem:                       newWinDictItem(db, opts...),
		WinFbOrderLog:                     newWinFbOrderLog(db, opts...),
		WinFrontGameBigCategoryBanner:     newWinFrontGameBigCategoryBanner(db, opts...),
		WinFrontGameClassifyCm:            newWinFrontGameClassifyCm(db, opts...),
		WinFrontGameClassifyInfoCm:        newWinFrontGameClassifyInfoCm(db, opts...),
		WinGameSlotFavorite:               newWinGameSlotFavorite(db, opts...),
		WinHelpInfo:                       newWinHelpInfo(db, opts...),
		WinHelpType:                       newWinHelpType(db, opts...),
		WinMerchant:                       newWinMerchant(db, opts...),
		WinMonthlyTax:                     newWinMonthlyTax(db, opts...),
		WinMqError:                        newWinMqError(db, opts...),
		WinNotice:                         newWinNotice(db, opts...),
		WinNoticeStatus:                   newWinNoticeStatus(db, opts...),
		WinOperateLog:                     newWinOperateLog(db, opts...),
		WinOperationLog:                   newWinOperationLog(db, opts...),
		WinPayChannel:                     newWinPayChannel(db, opts...),
		WinPayPlatConfig:                  newWinPayPlatConfig(db, opts...),
		WinPromotion:                      newWinPromotion(db, opts...),
		WinPromotionsInfo:                 newWinPromotionsInfo(db, opts...),
		WinSendSmsReq:                     newWinSendSmsReq(db, opts...),
		WinSetting:                        newWinSetting(db, opts...),
		WinSmsRecord:                      newWinSmsRecord(db, opts...),
		WinSpecialRecordStakeGame:         newWinSpecialRecordStakeGame(db, opts...),
		WinUser:                           newWinUser(db, opts...),
		WinUserBankList:                   newWinUserBankList(db, opts...),
		WinUserExt:                        newWinUserExt(db, opts...),
		WinUserFacebookLogin:              newWinUserFacebookLogin(db, opts...),
		WinUserFbMarket:                   newWinUserFbMarket(db, opts...),
		WinUserFlag:                       newWinUserFlag(db, opts...),
		WinUserGoogleCode:                 newWinUserGoogleCode(db, opts...),
		WinUserGoogleLogin:                newWinUserGoogleLogin(db, opts...),
		WinUserJoinFlag:                   newWinUserJoinFlag(db, opts...),
		WinUserKyc:                        newWinUserKyc(db, opts...),
		WinUserKycBac:                     newWinUserKycBac(db, opts...),
		WinUserKycHi:                      newWinUserKycHi(db, opts...),
		WinUserKycHisBac:                  newWinUserKycHisBac(db, opts...),
		WinUserLevel:                      newWinUserLevel(db, opts...),
		WinUserLevelRebate:                newWinUserLevelRebate(db, opts...),
		WinUserLevelRebateTmp:             newWinUserLevelRebateTmp(db, opts...),
		WinUserLevelReward:                newWinUserLevelReward(db, opts...),
		WinUserLevelTmp:                   newWinUserLevelTmp(db, opts...),
		WinUserLoginLog:                   newWinUserLoginLog(db, opts...),
		WinUserOnline:                     newWinUserOnline(db, opts...),
		WinUserOnlineReport:               newWinUserOnlineReport(db, opts...),
		WinUserPromotionRegistration:      newWinUserPromotionRegistration(db, opts...),
		WinUserRebateSet:                  newWinUserRebateSet(db, opts...),
		WinUserValidRebate:                newWinUserValidRebate(db, opts...),
		WinUserVip:                        newWinUserVip(db, opts...),
		WinUserVipConfig:                  newWinUserVipConfig(db, opts...),
		XxlJobGroup:                       newXxlJobGroup(db, opts...),
		XxlJobInfo:                        newXxlJobInfo(db, opts...),
		XxlJobLock:                        newXxlJobLock(db, opts...),
		XxlJobLog:                         newXxlJobLog(db, opts...),
		XxlJobLogReport:                   newXxlJobLogReport(db, opts...),
		XxlJobLogglue:                     newXxlJobLogglue(db, opts...),
		XxlJobRegistry:                    newXxlJobRegistry(db, opts...),
		XxlJobUser:                        newXxlJobUser(db, opts...),
	}
}

type Query struct {
	db *gorm.DB

	ActivityAlertUserConfig           activityAlertUserConfig
	ActivityBase                      activityBase
	ActivityBlackInfo                 activityBlackInfo
	ActivityChristmasHelpInfo         activityChristmasHelpInfo
	ActivityChristmasWarningThreshold activityChristmasWarningThreshold
	ActivityCondition                 activityCondition
	ActivityConditionChristma         activityConditionChristma
	ActivityImage                     activityImage
	ActivityLaunchHelp                activityLaunchHelp
	ActivityTakeRecord                activityTakeRecord
	AgentCommissionRate               agentCommissionRate
	AgentDailyReport                  agentDailyReport
	AgentRankReport                   agentRankReport
	ChristmasNewUserSupportRule       christmasNewUserSupportRule
	EVoucher                          eVoucher
	GameList                          gameList
	GamePagcor                        gamePagcor
	GameProvider                      gameProvider
	GameProviderSubtype               gameProviderSubtype
	GameRankReport                    gameRankReport
	GameType                          gameType
	OrderSettle                       orderSettle
	Ticket                            ticket
	TmpUserReport                     tmpUserReport
	UserRankReport                    userRankReport
	WinAdmin                          winAdmin
	WinAdminExportFileTask            winAdminExportFileTask
	WinAdminLoginLog                  winAdminLoginLog
	WinAdminOperateLog                winAdminOperateLog
	WinAgentCommissionRate            winAgentCommissionRate
	WinAgentLink                      winAgentLink
	WinAuthAdminGroup                 winAuthAdminGroup
	WinAuthGroup                      winAuthGroup
	WinAuthGroupAccess                winAuthGroupAccess
	WinAuthRule                       winAuthRule
	WinBanner                         winBanner
	WinBetSlipsException              winBetSlipsException
	WinBlog                           winBlog
	WinCheckInRecord                  winCheckInRecord
	WinCheckInRule                    winCheckInRule
	WinCityItem                       winCityItem
	WinCodeAudit                      winCodeAudit
	WinCodeRecord                     winCodeRecord
	WinCodeRecordsRequire             winCodeRecordsRequire
	WinCodeRecordsVip                 winCodeRecordsVip
	WinCodeRecordsVipTmp              winCodeRecordsVipTmp
	WinCodeRecordsVipTmp1             winCodeRecordsVipTmp1
	WinCoinAdminTransfer              winCoinAdminTransfer
	WinCoinCommission                 winCoinCommission
	WinCoinDepositRecord              winCoinDepositRecord
	WinCoinRate                       winCoinRate
	WinCoinRebate                     winCoinRebate
	WinCoinRebateSet                  winCoinRebateSet
	WinCoinReward                     winCoinReward
	WinCoinWithdrawalRecord           winCoinWithdrawalRecord
	WinConfig                         winConfig
	WinDict                           winDict
	WinDictItem                       winDictItem
	WinFbOrderLog                     winFbOrderLog
	WinFrontGameBigCategoryBanner     winFrontGameBigCategoryBanner
	WinFrontGameClassifyCm            winFrontGameClassifyCm
	WinFrontGameClassifyInfoCm        winFrontGameClassifyInfoCm
	WinGameSlotFavorite               winGameSlotFavorite
	WinHelpInfo                       winHelpInfo
	WinHelpType                       winHelpType
	WinMerchant                       winMerchant
	WinMonthlyTax                     winMonthlyTax
	WinMqError                        winMqError
	WinNotice                         winNotice
	WinNoticeStatus                   winNoticeStatus
	WinOperateLog                     winOperateLog
	WinOperationLog                   winOperationLog
	WinPayChannel                     winPayChannel
	WinPayPlatConfig                  winPayPlatConfig
	WinPromotion                      winPromotion
	WinPromotionsInfo                 winPromotionsInfo
	WinSendSmsReq                     winSendSmsReq
	WinSetting                        winSetting
	WinSmsRecord                      winSmsRecord
	WinSpecialRecordStakeGame         winSpecialRecordStakeGame
	WinUser                           winUser
	WinUserBankList                   winUserBankList
	WinUserExt                        winUserExt
	WinUserFacebookLogin              winUserFacebookLogin
	WinUserFbMarket                   winUserFbMarket
	WinUserFlag                       winUserFlag
	WinUserGoogleCode                 winUserGoogleCode
	WinUserGoogleLogin                winUserGoogleLogin
	WinUserJoinFlag                   winUserJoinFlag
	WinUserKyc                        winUserKyc
	WinUserKycBac                     winUserKycBac
	WinUserKycHi                      winUserKycHi
	WinUserKycHisBac                  winUserKycHisBac
	WinUserLevel                      winUserLevel
	WinUserLevelRebate                winUserLevelRebate
	WinUserLevelRebateTmp             winUserLevelRebateTmp
	WinUserLevelReward                winUserLevelReward
	WinUserLevelTmp                   winUserLevelTmp
	WinUserLoginLog                   winUserLoginLog
	WinUserOnline                     winUserOnline
	WinUserOnlineReport               winUserOnlineReport
	WinUserPromotionRegistration      winUserPromotionRegistration
	WinUserRebateSet                  winUserRebateSet
	WinUserValidRebate                winUserValidRebate
	WinUserVip                        winUserVip
	WinUserVipConfig                  winUserVipConfig
	XxlJobGroup                       xxlJobGroup
	XxlJobInfo                        xxlJobInfo
	XxlJobLock                        xxlJobLock
	XxlJobLog                         xxlJobLog
	XxlJobLogReport                   xxlJobLogReport
	XxlJobLogglue                     xxlJobLogglue
	XxlJobRegistry                    xxlJobRegistry
	XxlJobUser                        xxlJobUser
}

func (q *Query) Available() bool { return q.db != nil }

func (q *Query) clone(db *gorm.DB) *Query {
	return &Query{
		db:                                db,
		ActivityAlertUserConfig:           q.ActivityAlertUserConfig.clone(db),
		ActivityBase:                      q.ActivityBase.clone(db),
		ActivityBlackInfo:                 q.ActivityBlackInfo.clone(db),
		ActivityChristmasHelpInfo:         q.ActivityChristmasHelpInfo.clone(db),
		ActivityChristmasWarningThreshold: q.ActivityChristmasWarningThreshold.clone(db),
		ActivityCondition:                 q.ActivityCondition.clone(db),
		ActivityConditionChristma:         q.ActivityConditionChristma.clone(db),
		ActivityImage:                     q.ActivityImage.clone(db),
		ActivityLaunchHelp:                q.ActivityLaunchHelp.clone(db),
		ActivityTakeRecord:                q.ActivityTakeRecord.clone(db),
		AgentCommissionRate:               q.AgentCommissionRate.clone(db),
		AgentDailyReport:                  q.AgentDailyReport.clone(db),
		AgentRankReport:                   q.AgentRankReport.clone(db),
		ChristmasNewUserSupportRule:       q.ChristmasNewUserSupportRule.clone(db),
		EVoucher:                          q.EVoucher.clone(db),
		GameList:                          q.GameList.clone(db),
		GamePagcor:                        q.GamePagcor.clone(db),
		GameProvider:                      q.GameProvider.clone(db),
		GameProviderSubtype:               q.GameProviderSubtype.clone(db),
		GameRankReport:                    q.GameRankReport.clone(db),
		GameType:                          q.GameType.clone(db),
		OrderSettle:                       q.OrderSettle.clone(db),
		Ticket:                            q.Ticket.clone(db),
		TmpUserReport:                     q.TmpUserReport.clone(db),
		UserRankReport:                    q.UserRankReport.clone(db),
		WinAdmin:                          q.WinAdmin.clone(db),
		WinAdminExportFileTask:            q.WinAdminExportFileTask.clone(db),
		WinAdminLoginLog:                  q.WinAdminLoginLog.clone(db),
		WinAdminOperateLog:                q.WinAdminOperateLog.clone(db),
		WinAgentCommissionRate:            q.WinAgentCommissionRate.clone(db),
		WinAgentLink:                      q.WinAgentLink.clone(db),
		WinAuthAdminGroup:                 q.WinAuthAdminGroup.clone(db),
		WinAuthGroup:                      q.WinAuthGroup.clone(db),
		WinAuthGroupAccess:                q.WinAuthGroupAccess.clone(db),
		WinAuthRule:                       q.WinAuthRule.clone(db),
		WinBanner:                         q.WinBanner.clone(db),
		WinBetSlipsException:              q.WinBetSlipsException.clone(db),
		WinBlog:                           q.WinBlog.clone(db),
		WinCheckInRecord:                  q.WinCheckInRecord.clone(db),
		WinCheckInRule:                    q.WinCheckInRule.clone(db),
		WinCityItem:                       q.WinCityItem.clone(db),
		WinCodeAudit:                      q.WinCodeAudit.clone(db),
		WinCodeRecord:                     q.WinCodeRecord.clone(db),
		WinCodeRecordsRequire:             q.WinCodeRecordsRequire.clone(db),
		WinCodeRecordsVip:                 q.WinCodeRecordsVip.clone(db),
		WinCodeRecordsVipTmp:              q.WinCodeRecordsVipTmp.clone(db),
		WinCodeRecordsVipTmp1:             q.WinCodeRecordsVipTmp1.clone(db),
		WinCoinAdminTransfer:              q.WinCoinAdminTransfer.clone(db),
		WinCoinCommission:                 q.WinCoinCommission.clone(db),
		WinCoinDepositRecord:              q.WinCoinDepositRecord.clone(db),
		WinCoinRate:                       q.WinCoinRate.clone(db),
		WinCoinRebate:                     q.WinCoinRebate.clone(db),
		WinCoinRebateSet:                  q.WinCoinRebateSet.clone(db),
		WinCoinReward:                     q.WinCoinReward.clone(db),
		WinCoinWithdrawalRecord:           q.WinCoinWithdrawalRecord.clone(db),
		WinConfig:                         q.WinConfig.clone(db),
		WinDict:                           q.WinDict.clone(db),
		WinDictItem:                       q.WinDictItem.clone(db),
		WinFbOrderLog:                     q.WinFbOrderLog.clone(db),
		WinFrontGameBigCategoryBanner:     q.WinFrontGameBigCategoryBanner.clone(db),
		WinFrontGameClassifyCm:            q.WinFrontGameClassifyCm.clone(db),
		WinFrontGameClassifyInfoCm:        q.WinFrontGameClassifyInfoCm.clone(db),
		WinGameSlotFavorite:               q.WinGameSlotFavorite.clone(db),
		WinHelpInfo:                       q.WinHelpInfo.clone(db),
		WinHelpType:                       q.WinHelpType.clone(db),
		WinMerchant:                       q.WinMerchant.clone(db),
		WinMonthlyTax:                     q.WinMonthlyTax.clone(db),
		WinMqError:                        q.WinMqError.clone(db),
		WinNotice:                         q.WinNotice.clone(db),
		WinNoticeStatus:                   q.WinNoticeStatus.clone(db),
		WinOperateLog:                     q.WinOperateLog.clone(db),
		WinOperationLog:                   q.WinOperationLog.clone(db),
		WinPayChannel:                     q.WinPayChannel.clone(db),
		WinPayPlatConfig:                  q.WinPayPlatConfig.clone(db),
		WinPromotion:                      q.WinPromotion.clone(db),
		WinPromotionsInfo:                 q.WinPromotionsInfo.clone(db),
		WinSendSmsReq:                     q.WinSendSmsReq.clone(db),
		WinSetting:                        q.WinSetting.clone(db),
		WinSmsRecord:                      q.WinSmsRecord.clone(db),
		WinSpecialRecordStakeGame:         q.WinSpecialRecordStakeGame.clone(db),
		WinUser:                           q.WinUser.clone(db),
		WinUserBankList:                   q.WinUserBankList.clone(db),
		WinUserExt:                        q.WinUserExt.clone(db),
		WinUserFacebookLogin:              q.WinUserFacebookLogin.clone(db),
		WinUserFbMarket:                   q.WinUserFbMarket.clone(db),
		WinUserFlag:                       q.WinUserFlag.clone(db),
		WinUserGoogleCode:                 q.WinUserGoogleCode.clone(db),
		WinUserGoogleLogin:                q.WinUserGoogleLogin.clone(db),
		WinUserJoinFlag:                   q.WinUserJoinFlag.clone(db),
		WinUserKyc:                        q.WinUserKyc.clone(db),
		WinUserKycBac:                     q.WinUserKycBac.clone(db),
		WinUserKycHi:                      q.WinUserKycHi.clone(db),
		WinUserKycHisBac:                  q.WinUserKycHisBac.clone(db),
		WinUserLevel:                      q.WinUserLevel.clone(db),
		WinUserLevelRebate:                q.WinUserLevelRebate.clone(db),
		WinUserLevelRebateTmp:             q.WinUserLevelRebateTmp.clone(db),
		WinUserLevelReward:                q.WinUserLevelReward.clone(db),
		WinUserLevelTmp:                   q.WinUserLevelTmp.clone(db),
		WinUserLoginLog:                   q.WinUserLoginLog.clone(db),
		WinUserOnline:                     q.WinUserOnline.clone(db),
		WinUserOnlineReport:               q.WinUserOnlineReport.clone(db),
		WinUserPromotionRegistration:      q.WinUserPromotionRegistration.clone(db),
		WinUserRebateSet:                  q.WinUserRebateSet.clone(db),
		WinUserValidRebate:                q.WinUserValidRebate.clone(db),
		WinUserVip:                        q.WinUserVip.clone(db),
		WinUserVipConfig:                  q.WinUserVipConfig.clone(db),
		XxlJobGroup:                       q.XxlJobGroup.clone(db),
		XxlJobInfo:                        q.XxlJobInfo.clone(db),
		XxlJobLock:                        q.XxlJobLock.clone(db),
		XxlJobLog:                         q.XxlJobLog.clone(db),
		XxlJobLogReport:                   q.XxlJobLogReport.clone(db),
		XxlJobLogglue:                     q.XxlJobLogglue.clone(db),
		XxlJobRegistry:                    q.XxlJobRegistry.clone(db),
		XxlJobUser:                        q.XxlJobUser.clone(db),
	}
}

func (q *Query) ReadDB() *Query {
	return q.ReplaceDB(q.db.Clauses(dbresolver.Read))
}

func (q *Query) WriteDB() *Query {
	return q.ReplaceDB(q.db.Clauses(dbresolver.Write))
}

func (q *Query) ReplaceDB(db *gorm.DB) *Query {
	return &Query{
		db:                                db,
		ActivityAlertUserConfig:           q.ActivityAlertUserConfig.replaceDB(db),
		ActivityBase:                      q.ActivityBase.replaceDB(db),
		ActivityBlackInfo:                 q.ActivityBlackInfo.replaceDB(db),
		ActivityChristmasHelpInfo:         q.ActivityChristmasHelpInfo.replaceDB(db),
		ActivityChristmasWarningThreshold: q.ActivityChristmasWarningThreshold.replaceDB(db),
		ActivityCondition:                 q.ActivityCondition.replaceDB(db),
		ActivityConditionChristma:         q.ActivityConditionChristma.replaceDB(db),
		ActivityImage:                     q.ActivityImage.replaceDB(db),
		ActivityLaunchHelp:                q.ActivityLaunchHelp.replaceDB(db),
		ActivityTakeRecord:                q.ActivityTakeRecord.replaceDB(db),
		AgentCommissionRate:               q.AgentCommissionRate.replaceDB(db),
		AgentDailyReport:                  q.AgentDailyReport.replaceDB(db),
		AgentRankReport:                   q.AgentRankReport.replaceDB(db),
		ChristmasNewUserSupportRule:       q.ChristmasNewUserSupportRule.replaceDB(db),
		EVoucher:                          q.EVoucher.replaceDB(db),
		GameList:                          q.GameList.replaceDB(db),
		GamePagcor:                        q.GamePagcor.replaceDB(db),
		GameProvider:                      q.GameProvider.replaceDB(db),
		GameProviderSubtype:               q.GameProviderSubtype.replaceDB(db),
		GameRankReport:                    q.GameRankReport.replaceDB(db),
		GameType:                          q.GameType.replaceDB(db),
		OrderSettle:                       q.OrderSettle.replaceDB(db),
		Ticket:                            q.Ticket.replaceDB(db),
		TmpUserReport:                     q.TmpUserReport.replaceDB(db),
		UserRankReport:                    q.UserRankReport.replaceDB(db),
		WinAdmin:                          q.WinAdmin.replaceDB(db),
		WinAdminExportFileTask:            q.WinAdminExportFileTask.replaceDB(db),
		WinAdminLoginLog:                  q.WinAdminLoginLog.replaceDB(db),
		WinAdminOperateLog:                q.WinAdminOperateLog.replaceDB(db),
		WinAgentCommissionRate:            q.WinAgentCommissionRate.replaceDB(db),
		WinAgentLink:                      q.WinAgentLink.replaceDB(db),
		WinAuthAdminGroup:                 q.WinAuthAdminGroup.replaceDB(db),
		WinAuthGroup:                      q.WinAuthGroup.replaceDB(db),
		WinAuthGroupAccess:                q.WinAuthGroupAccess.replaceDB(db),
		WinAuthRule:                       q.WinAuthRule.replaceDB(db),
		WinBanner:                         q.WinBanner.replaceDB(db),
		WinBetSlipsException:              q.WinBetSlipsException.replaceDB(db),
		WinBlog:                           q.WinBlog.replaceDB(db),
		WinCheckInRecord:                  q.WinCheckInRecord.replaceDB(db),
		WinCheckInRule:                    q.WinCheckInRule.replaceDB(db),
		WinCityItem:                       q.WinCityItem.replaceDB(db),
		WinCodeAudit:                      q.WinCodeAudit.replaceDB(db),
		WinCodeRecord:                     q.WinCodeRecord.replaceDB(db),
		WinCodeRecordsRequire:             q.WinCodeRecordsRequire.replaceDB(db),
		WinCodeRecordsVip:                 q.WinCodeRecordsVip.replaceDB(db),
		WinCodeRecordsVipTmp:              q.WinCodeRecordsVipTmp.replaceDB(db),
		WinCodeRecordsVipTmp1:             q.WinCodeRecordsVipTmp1.replaceDB(db),
		WinCoinAdminTransfer:              q.WinCoinAdminTransfer.replaceDB(db),
		WinCoinCommission:                 q.WinCoinCommission.replaceDB(db),
		WinCoinDepositRecord:              q.WinCoinDepositRecord.replaceDB(db),
		WinCoinRate:                       q.WinCoinRate.replaceDB(db),
		WinCoinRebate:                     q.WinCoinRebate.replaceDB(db),
		WinCoinRebateSet:                  q.WinCoinRebateSet.replaceDB(db),
		WinCoinReward:                     q.WinCoinReward.replaceDB(db),
		WinCoinWithdrawalRecord:           q.WinCoinWithdrawalRecord.replaceDB(db),
		WinConfig:                         q.WinConfig.replaceDB(db),
		WinDict:                           q.WinDict.replaceDB(db),
		WinDictItem:                       q.WinDictItem.replaceDB(db),
		WinFbOrderLog:                     q.WinFbOrderLog.replaceDB(db),
		WinFrontGameBigCategoryBanner:     q.WinFrontGameBigCategoryBanner.replaceDB(db),
		WinFrontGameClassifyCm:            q.WinFrontGameClassifyCm.replaceDB(db),
		WinFrontGameClassifyInfoCm:        q.WinFrontGameClassifyInfoCm.replaceDB(db),
		WinGameSlotFavorite:               q.WinGameSlotFavorite.replaceDB(db),
		WinHelpInfo:                       q.WinHelpInfo.replaceDB(db),
		WinHelpType:                       q.WinHelpType.replaceDB(db),
		WinMerchant:                       q.WinMerchant.replaceDB(db),
		WinMonthlyTax:                     q.WinMonthlyTax.replaceDB(db),
		WinMqError:                        q.WinMqError.replaceDB(db),
		WinNotice:                         q.WinNotice.replaceDB(db),
		WinNoticeStatus:                   q.WinNoticeStatus.replaceDB(db),
		WinOperateLog:                     q.WinOperateLog.replaceDB(db),
		WinOperationLog:                   q.WinOperationLog.replaceDB(db),
		WinPayChannel:                     q.WinPayChannel.replaceDB(db),
		WinPayPlatConfig:                  q.WinPayPlatConfig.replaceDB(db),
		WinPromotion:                      q.WinPromotion.replaceDB(db),
		WinPromotionsInfo:                 q.WinPromotionsInfo.replaceDB(db),
		WinSendSmsReq:                     q.WinSendSmsReq.replaceDB(db),
		WinSetting:                        q.WinSetting.replaceDB(db),
		WinSmsRecord:                      q.WinSmsRecord.replaceDB(db),
		WinSpecialRecordStakeGame:         q.WinSpecialRecordStakeGame.replaceDB(db),
		WinUser:                           q.WinUser.replaceDB(db),
		WinUserBankList:                   q.WinUserBankList.replaceDB(db),
		WinUserExt:                        q.WinUserExt.replaceDB(db),
		WinUserFacebookLogin:              q.WinUserFacebookLogin.replaceDB(db),
		WinUserFbMarket:                   q.WinUserFbMarket.replaceDB(db),
		WinUserFlag:                       q.WinUserFlag.replaceDB(db),
		WinUserGoogleCode:                 q.WinUserGoogleCode.replaceDB(db),
		WinUserGoogleLogin:                q.WinUserGoogleLogin.replaceDB(db),
		WinUserJoinFlag:                   q.WinUserJoinFlag.replaceDB(db),
		WinUserKyc:                        q.WinUserKyc.replaceDB(db),
		WinUserKycBac:                     q.WinUserKycBac.replaceDB(db),
		WinUserKycHi:                      q.WinUserKycHi.replaceDB(db),
		WinUserKycHisBac:                  q.WinUserKycHisBac.replaceDB(db),
		WinUserLevel:                      q.WinUserLevel.replaceDB(db),
		WinUserLevelRebate:                q.WinUserLevelRebate.replaceDB(db),
		WinUserLevelRebateTmp:             q.WinUserLevelRebateTmp.replaceDB(db),
		WinUserLevelReward:                q.WinUserLevelReward.replaceDB(db),
		WinUserLevelTmp:                   q.WinUserLevelTmp.replaceDB(db),
		WinUserLoginLog:                   q.WinUserLoginLog.replaceDB(db),
		WinUserOnline:                     q.WinUserOnline.replaceDB(db),
		WinUserOnlineReport:               q.WinUserOnlineReport.replaceDB(db),
		WinUserPromotionRegistration:      q.WinUserPromotionRegistration.replaceDB(db),
		WinUserRebateSet:                  q.WinUserRebateSet.replaceDB(db),
		WinUserValidRebate:                q.WinUserValidRebate.replaceDB(db),
		WinUserVip:                        q.WinUserVip.replaceDB(db),
		WinUserVipConfig:                  q.WinUserVipConfig.replaceDB(db),
		XxlJobGroup:                       q.XxlJobGroup.replaceDB(db),
		XxlJobInfo:                        q.XxlJobInfo.replaceDB(db),
		XxlJobLock:                        q.XxlJobLock.replaceDB(db),
		XxlJobLog:                         q.XxlJobLog.replaceDB(db),
		XxlJobLogReport:                   q.XxlJobLogReport.replaceDB(db),
		XxlJobLogglue:                     q.XxlJobLogglue.replaceDB(db),
		XxlJobRegistry:                    q.XxlJobRegistry.replaceDB(db),
		XxlJobUser:                        q.XxlJobUser.replaceDB(db),
	}
}

type queryCtx struct {
	ActivityAlertUserConfig           *activityAlertUserConfigDo
	ActivityBase                      *activityBaseDo
	ActivityBlackInfo                 *activityBlackInfoDo
	ActivityChristmasHelpInfo         *activityChristmasHelpInfoDo
	ActivityChristmasWarningThreshold *activityChristmasWarningThresholdDo
	ActivityCondition                 *activityConditionDo
	ActivityConditionChristma         *activityConditionChristmaDo
	ActivityImage                     *activityImageDo
	ActivityLaunchHelp                *activityLaunchHelpDo
	ActivityTakeRecord                *activityTakeRecordDo
	AgentCommissionRate               *agentCommissionRateDo
	AgentDailyReport                  *agentDailyReportDo
	AgentRankReport                   *agentRankReportDo
	ChristmasNewUserSupportRule       *christmasNewUserSupportRuleDo
	EVoucher                          *eVoucherDo
	GameList                          *gameListDo
	GamePagcor                        *gamePagcorDo
	GameProvider                      *gameProviderDo
	GameProviderSubtype               *gameProviderSubtypeDo
	GameRankReport                    *gameRankReportDo
	GameType                          *gameTypeDo
	OrderSettle                       *orderSettleDo
	Ticket                            *ticketDo
	TmpUserReport                     *tmpUserReportDo
	UserRankReport                    *userRankReportDo
	WinAdmin                          *winAdminDo
	WinAdminExportFileTask            *winAdminExportFileTaskDo
	WinAdminLoginLog                  *winAdminLoginLogDo
	WinAdminOperateLog                *winAdminOperateLogDo
	WinAgentCommissionRate            *winAgentCommissionRateDo
	WinAgentLink                      *winAgentLinkDo
	WinAuthAdminGroup                 *winAuthAdminGroupDo
	WinAuthGroup                      *winAuthGroupDo
	WinAuthGroupAccess                *winAuthGroupAccessDo
	WinAuthRule                       *winAuthRuleDo
	WinBanner                         *winBannerDo
	WinBetSlipsException              *winBetSlipsExceptionDo
	WinBlog                           *winBlogDo
	WinCheckInRecord                  *winCheckInRecordDo
	WinCheckInRule                    *winCheckInRuleDo
	WinCityItem                       *winCityItemDo
	WinCodeAudit                      *winCodeAuditDo
	WinCodeRecord                     *winCodeRecordDo
	WinCodeRecordsRequire             *winCodeRecordsRequireDo
	WinCodeRecordsVip                 *winCodeRecordsVipDo
	WinCodeRecordsVipTmp              *winCodeRecordsVipTmpDo
	WinCodeRecordsVipTmp1             *winCodeRecordsVipTmp1Do
	WinCoinAdminTransfer              *winCoinAdminTransferDo
	WinCoinCommission                 *winCoinCommissionDo
	WinCoinDepositRecord              *winCoinDepositRecordDo
	WinCoinRate                       *winCoinRateDo
	WinCoinRebate                     *winCoinRebateDo
	WinCoinRebateSet                  *winCoinRebateSetDo
	WinCoinReward                     *winCoinRewardDo
	WinCoinWithdrawalRecord           *winCoinWithdrawalRecordDo
	WinConfig                         *winConfigDo
	WinDict                           *winDictDo
	WinDictItem                       *winDictItemDo
	WinFbOrderLog                     *winFbOrderLogDo
	WinFrontGameBigCategoryBanner     *winFrontGameBigCategoryBannerDo
	WinFrontGameClassifyCm            *winFrontGameClassifyCmDo
	WinFrontGameClassifyInfoCm        *winFrontGameClassifyInfoCmDo
	WinGameSlotFavorite               *winGameSlotFavoriteDo
	WinHelpInfo                       *winHelpInfoDo
	WinHelpType                       *winHelpTypeDo
	WinMerchant                       *winMerchantDo
	WinMonthlyTax                     *winMonthlyTaxDo
	WinMqError                        *winMqErrorDo
	WinNotice                         *winNoticeDo
	WinNoticeStatus                   *winNoticeStatusDo
	WinOperateLog                     *winOperateLogDo
	WinOperationLog                   *winOperationLogDo
	WinPayChannel                     *winPayChannelDo
	WinPayPlatConfig                  *winPayPlatConfigDo
	WinPromotion                      *winPromotionDo
	WinPromotionsInfo                 *winPromotionsInfoDo
	WinSendSmsReq                     *winSendSmsReqDo
	WinSetting                        *winSettingDo
	WinSmsRecord                      *winSmsRecordDo
	WinSpecialRecordStakeGame         *winSpecialRecordStakeGameDo
	WinUser                           *winUserDo
	WinUserBankList                   *winUserBankListDo
	WinUserExt                        *winUserExtDo
	WinUserFacebookLogin              *winUserFacebookLoginDo
	WinUserFbMarket                   *winUserFbMarketDo
	WinUserFlag                       *winUserFlagDo
	WinUserGoogleCode                 *winUserGoogleCodeDo
	WinUserGoogleLogin                *winUserGoogleLoginDo
	WinUserJoinFlag                   *winUserJoinFlagDo
	WinUserKyc                        *winUserKycDo
	WinUserKycBac                     *winUserKycBacDo
	WinUserKycHi                      *winUserKycHiDo
	WinUserKycHisBac                  *winUserKycHisBacDo
	WinUserLevel                      *winUserLevelDo
	WinUserLevelRebate                *winUserLevelRebateDo
	WinUserLevelRebateTmp             *winUserLevelRebateTmpDo
	WinUserLevelReward                *winUserLevelRewardDo
	WinUserLevelTmp                   *winUserLevelTmpDo
	WinUserLoginLog                   *winUserLoginLogDo
	WinUserOnline                     *winUserOnlineDo
	WinUserOnlineReport               *winUserOnlineReportDo
	WinUserPromotionRegistration      *winUserPromotionRegistrationDo
	WinUserRebateSet                  *winUserRebateSetDo
	WinUserValidRebate                *winUserValidRebateDo
	WinUserVip                        *winUserVipDo
	WinUserVipConfig                  *winUserVipConfigDo
	XxlJobGroup                       *xxlJobGroupDo
	XxlJobInfo                        *xxlJobInfoDo
	XxlJobLock                        *xxlJobLockDo
	XxlJobLog                         *xxlJobLogDo
	XxlJobLogReport                   *xxlJobLogReportDo
	XxlJobLogglue                     *xxlJobLogglueDo
	XxlJobRegistry                    *xxlJobRegistryDo
	XxlJobUser                        *xxlJobUserDo
}

func (q *Query) WithContext(ctx context.Context) *queryCtx {
	return &queryCtx{
		ActivityAlertUserConfig:           q.ActivityAlertUserConfig.WithContext(ctx),
		ActivityBase:                      q.ActivityBase.WithContext(ctx),
		ActivityBlackInfo:                 q.ActivityBlackInfo.WithContext(ctx),
		ActivityChristmasHelpInfo:         q.ActivityChristmasHelpInfo.WithContext(ctx),
		ActivityChristmasWarningThreshold: q.ActivityChristmasWarningThreshold.WithContext(ctx),
		ActivityCondition:                 q.ActivityCondition.WithContext(ctx),
		ActivityConditionChristma:         q.ActivityConditionChristma.WithContext(ctx),
		ActivityImage:                     q.ActivityImage.WithContext(ctx),
		ActivityLaunchHelp:                q.ActivityLaunchHelp.WithContext(ctx),
		ActivityTakeRecord:                q.ActivityTakeRecord.WithContext(ctx),
		AgentCommissionRate:               q.AgentCommissionRate.WithContext(ctx),
		AgentDailyReport:                  q.AgentDailyReport.WithContext(ctx),
		AgentRankReport:                   q.AgentRankReport.WithContext(ctx),
		ChristmasNewUserSupportRule:       q.ChristmasNewUserSupportRule.WithContext(ctx),
		EVoucher:                          q.EVoucher.WithContext(ctx),
		GameList:                          q.GameList.WithContext(ctx),
		GamePagcor:                        q.GamePagcor.WithContext(ctx),
		GameProvider:                      q.GameProvider.WithContext(ctx),
		GameProviderSubtype:               q.GameProviderSubtype.WithContext(ctx),
		GameRankReport:                    q.GameRankReport.WithContext(ctx),
		GameType:                          q.GameType.WithContext(ctx),
		OrderSettle:                       q.OrderSettle.WithContext(ctx),
		Ticket:                            q.Ticket.WithContext(ctx),
		TmpUserReport:                     q.TmpUserReport.WithContext(ctx),
		UserRankReport:                    q.UserRankReport.WithContext(ctx),
		WinAdmin:                          q.WinAdmin.WithContext(ctx),
		WinAdminExportFileTask:            q.WinAdminExportFileTask.WithContext(ctx),
		WinAdminLoginLog:                  q.WinAdminLoginLog.WithContext(ctx),
		WinAdminOperateLog:                q.WinAdminOperateLog.WithContext(ctx),
		WinAgentCommissionRate:            q.WinAgentCommissionRate.WithContext(ctx),
		WinAgentLink:                      q.WinAgentLink.WithContext(ctx),
		WinAuthAdminGroup:                 q.WinAuthAdminGroup.WithContext(ctx),
		WinAuthGroup:                      q.WinAuthGroup.WithContext(ctx),
		WinAuthGroupAccess:                q.WinAuthGroupAccess.WithContext(ctx),
		WinAuthRule:                       q.WinAuthRule.WithContext(ctx),
		WinBanner:                         q.WinBanner.WithContext(ctx),
		WinBetSlipsException:              q.WinBetSlipsException.WithContext(ctx),
		WinBlog:                           q.WinBlog.WithContext(ctx),
		WinCheckInRecord:                  q.WinCheckInRecord.WithContext(ctx),
		WinCheckInRule:                    q.WinCheckInRule.WithContext(ctx),
		WinCityItem:                       q.WinCityItem.WithContext(ctx),
		WinCodeAudit:                      q.WinCodeAudit.WithContext(ctx),
		WinCodeRecord:                     q.WinCodeRecord.WithContext(ctx),
		WinCodeRecordsRequire:             q.WinCodeRecordsRequire.WithContext(ctx),
		WinCodeRecordsVip:                 q.WinCodeRecordsVip.WithContext(ctx),
		WinCodeRecordsVipTmp:              q.WinCodeRecordsVipTmp.WithContext(ctx),
		WinCodeRecordsVipTmp1:             q.WinCodeRecordsVipTmp1.WithContext(ctx),
		WinCoinAdminTransfer:              q.WinCoinAdminTransfer.WithContext(ctx),
		WinCoinCommission:                 q.WinCoinCommission.WithContext(ctx),
		WinCoinDepositRecord:              q.WinCoinDepositRecord.WithContext(ctx),
		WinCoinRate:                       q.WinCoinRate.WithContext(ctx),
		WinCoinRebate:                     q.WinCoinRebate.WithContext(ctx),
		WinCoinRebateSet:                  q.WinCoinRebateSet.WithContext(ctx),
		WinCoinReward:                     q.WinCoinReward.WithContext(ctx),
		WinCoinWithdrawalRecord:           q.WinCoinWithdrawalRecord.WithContext(ctx),
		WinConfig:                         q.WinConfig.WithContext(ctx),
		WinDict:                           q.WinDict.WithContext(ctx),
		WinDictItem:                       q.WinDictItem.WithContext(ctx),
		WinFbOrderLog:                     q.WinFbOrderLog.WithContext(ctx),
		WinFrontGameBigCategoryBanner:     q.WinFrontGameBigCategoryBanner.WithContext(ctx),
		WinFrontGameClassifyCm:            q.WinFrontGameClassifyCm.WithContext(ctx),
		WinFrontGameClassifyInfoCm:        q.WinFrontGameClassifyInfoCm.WithContext(ctx),
		WinGameSlotFavorite:               q.WinGameSlotFavorite.WithContext(ctx),
		WinHelpInfo:                       q.WinHelpInfo.WithContext(ctx),
		WinHelpType:                       q.WinHelpType.WithContext(ctx),
		WinMerchant:                       q.WinMerchant.WithContext(ctx),
		WinMonthlyTax:                     q.WinMonthlyTax.WithContext(ctx),
		WinMqError:                        q.WinMqError.WithContext(ctx),
		WinNotice:                         q.WinNotice.WithContext(ctx),
		WinNoticeStatus:                   q.WinNoticeStatus.WithContext(ctx),
		WinOperateLog:                     q.WinOperateLog.WithContext(ctx),
		WinOperationLog:                   q.WinOperationLog.WithContext(ctx),
		WinPayChannel:                     q.WinPayChannel.WithContext(ctx),
		WinPayPlatConfig:                  q.WinPayPlatConfig.WithContext(ctx),
		WinPromotion:                      q.WinPromotion.WithContext(ctx),
		WinPromotionsInfo:                 q.WinPromotionsInfo.WithContext(ctx),
		WinSendSmsReq:                     q.WinSendSmsReq.WithContext(ctx),
		WinSetting:                        q.WinSetting.WithContext(ctx),
		WinSmsRecord:                      q.WinSmsRecord.WithContext(ctx),
		WinSpecialRecordStakeGame:         q.WinSpecialRecordStakeGame.WithContext(ctx),
		WinUser:                           q.WinUser.WithContext(ctx),
		WinUserBankList:                   q.WinUserBankList.WithContext(ctx),
		WinUserExt:                        q.WinUserExt.WithContext(ctx),
		WinUserFacebookLogin:              q.WinUserFacebookLogin.WithContext(ctx),
		WinUserFbMarket:                   q.WinUserFbMarket.WithContext(ctx),
		WinUserFlag:                       q.WinUserFlag.WithContext(ctx),
		WinUserGoogleCode:                 q.WinUserGoogleCode.WithContext(ctx),
		WinUserGoogleLogin:                q.WinUserGoogleLogin.WithContext(ctx),
		WinUserJoinFlag:                   q.WinUserJoinFlag.WithContext(ctx),
		WinUserKyc:                        q.WinUserKyc.WithContext(ctx),
		WinUserKycBac:                     q.WinUserKycBac.WithContext(ctx),
		WinUserKycHi:                      q.WinUserKycHi.WithContext(ctx),
		WinUserKycHisBac:                  q.WinUserKycHisBac.WithContext(ctx),
		WinUserLevel:                      q.WinUserLevel.WithContext(ctx),
		WinUserLevelRebate:                q.WinUserLevelRebate.WithContext(ctx),
		WinUserLevelRebateTmp:             q.WinUserLevelRebateTmp.WithContext(ctx),
		WinUserLevelReward:                q.WinUserLevelReward.WithContext(ctx),
		WinUserLevelTmp:                   q.WinUserLevelTmp.WithContext(ctx),
		WinUserLoginLog:                   q.WinUserLoginLog.WithContext(ctx),
		WinUserOnline:                     q.WinUserOnline.WithContext(ctx),
		WinUserOnlineReport:               q.WinUserOnlineReport.WithContext(ctx),
		WinUserPromotionRegistration:      q.WinUserPromotionRegistration.WithContext(ctx),
		WinUserRebateSet:                  q.WinUserRebateSet.WithContext(ctx),
		WinUserValidRebate:                q.WinUserValidRebate.WithContext(ctx),
		WinUserVip:                        q.WinUserVip.WithContext(ctx),
		WinUserVipConfig:                  q.WinUserVipConfig.WithContext(ctx),
		XxlJobGroup:                       q.XxlJobGroup.WithContext(ctx),
		XxlJobInfo:                        q.XxlJobInfo.WithContext(ctx),
		XxlJobLock:                        q.XxlJobLock.WithContext(ctx),
		XxlJobLog:                         q.XxlJobLog.WithContext(ctx),
		XxlJobLogReport:                   q.XxlJobLogReport.WithContext(ctx),
		XxlJobLogglue:                     q.XxlJobLogglue.WithContext(ctx),
		XxlJobRegistry:                    q.XxlJobRegistry.WithContext(ctx),
		XxlJobUser:                        q.XxlJobUser.WithContext(ctx),
	}
}

func (q *Query) Transaction(fc func(tx *Query) error, opts ...*sql.TxOptions) error {
	return q.db.Transaction(func(tx *gorm.DB) error { return fc(q.clone(tx)) }, opts...)
}

func (q *Query) Begin(opts ...*sql.TxOptions) *QueryTx {
	tx := q.db.Begin(opts...)
	return &QueryTx{Query: q.clone(tx), Error: tx.Error}
}

type QueryTx struct {
	*Query
	Error error
}

func (q *QueryTx) Commit() error {
	return q.db.Commit().Error
}

func (q *QueryTx) Rollback() error {
	return q.db.Rollback().Error
}

func (q *QueryTx) SavePoint(name string) error {
	return q.db.SavePoint(name).Error
}

func (q *QueryTx) RollbackTo(name string) error {
	return q.db.RollbackTo(name).Error
}
